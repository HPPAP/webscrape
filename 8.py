import requests
import os
import time
from tqdm import tqdm


ROOT_PATH = "data"
MAX_FAILS = 10
DELAY = 10
VOLUMES = [
    ["v.2 1640-42", "chi.16586151", 1148],
    ["v.3 1642-44", "chi.18173921", 854],
    ["v.4 1644-46", "chi.18173825", 758],
    ["v.5 1646-48", "chi.31110057", 714],
    ["v.5 1646-1648", "mdp.39015056729323", 802],
    ["v.6 1648-51", "chi.16416294", 716],
    ["v.6 1648-1651", "mdp.39015056729315", 714],
    ["v.7 1651-59", "chi.18173849", 988],
    ["v.8-11 1660-97 index", "chi.099164142", 1086],
    ["v.8 1660-67", "chi.48502872", 708],
    ["v.9 1667-87", "chi.19251911", 848],
    ["v.9 1699-1703", "chi.22692473", 966],
    ["v.10 1688-1693", "mdp.39015056560777", 910],
    ["v.11 1693-1697", "chi.56931621", 848],
    ["v.12 1697-1699", "mdp.39015056560686", 716],
    ["v.13 1699-1702", "chi.20670875", 920],
    ["v.15 1705-1708", "mdp.39015056560520", 698],
    ["v.16 (1708/11)", "umn.31951d02551121t", 710],
    ["v.16 1708-1711", "mdp.39015056560678", 702],
    ["v.17 1711-14", "chi.22690202", 772],
    ["v.18/34 1714/74", "umn.31951d01721987f", 1024],
    ["v.18-34 1714-74 index", "chi.39697822", 1006],
    ["v.18 (1714/17)", "umn.31951d02551123p", 786],
    ["v.18 1714-1718", "mdp.39015056560801", 808],
    ["v.19 1718-21", "chi.78147367", 816],
    ["v.19 1718-1721", "mdp.39015056560660", 818],
    ["v.21 1727-32", "chi.42850273", 1010],
    ["v.23 1737-41", "chi.78147514", 766],
    ["v.23 1737-1741", "mdp.39015056560504", 770],
    ["v.24 1741-45", "chi.78147069", 944],
    ["v.26 1750-54", "chi.20806722", 1074],
    ["v.27 1754-57", "chi.20806657", 980],
    ["v.30 1765-66", "chi.78147312", 896],
    ["v.31 1766-67", "chi.78147507", 708],
    ["v.31 1766-1768", "mdp.39015056564506", 726],
    ["v.32 1768-70", "chi.78147083", 1034],
    ["v.33 1770-72", "chi.78147141", 1008],
    ["v.34 1772-74", "chi.78147261", 868],
    ["v.35-55 1774-1800 index", "chi.74591227", 886],
    ["v.35 1774-76", "chi.78147329", 866],
    ["v.37 1778-1780", "chi.78147374", 996],
    ["v.38 1780-82", "chi.78147432", 1216],
    ["v.40 1784-85", "chi.78147381", 1228],
    ["v.41 1786", "chi.78147449", 1020],
    ["v.42 1787", "chi.78146571", 894],
    ["v.43 1787-88", "chi.78147045", 694],
    ["v.44 1788-89", "chi.099164312", 688],
    ["v.44 1788-1789", "mdp.39015016370515", 688],
    ["v.47 1792", "chi.16855766", 1140],
    ["v.48 1792-1793", "chi.78146622", 1050],
    ["v.49 1794", "mdp.39015056730933", 790],
    ["v.50 1794-1795", "mdp.39015056730925", 694],
    ["v.51 1796", "chi.099164370", 842],
    ["v.52 1796-97", "chi.099164388", 814],
    ["v.53 1797-98", "chi.099164396", 752],
    ["v.53 1797-1798", "mdp.39015056730750", 754],
    ["v.54 1798-99", "chi.78146608", 794],
    ["v.56-75 1801-20 index", "chi.41856726", 1100],
    ["v.59 1805/06", "iau.31858029589490", 852],
    ["v.62 1805-06", "chi.099164485", 1058],
    ["v.63 1808-09", "chi.099164493", 1008],
    ["v.64 1809", "mdp.39015056730867", 766],
    ["v.65 1819", "mdp.39015056730859", 864],
    ["v.66 1810-11", "chi.63763646", 752],
    ["v.70 1814-16", "chi.099164566", 1142],
    ["v.91 1836", "mdp.39015056577557", 1026],
    ["v.92 1837", "mdp.39015056577847", 840],
    ["v.93 1838", "mdp.39015056577839", 1054],
    ["v.94 1839", "mdp.39015056577821", 742],
    ["v.95 1840", "chi.099164689", 850],
    ["v.95 1840", "mdp.39015056577813", 852],
    ["v.96 1841", "mdp.39015056577995", 778],
    ["v.98 1843", "mdp.39015056577979", 800],
    ["v.99 1844", "chi.099164728", 812],
    ["v.99 1844", "mdp.39015056577961", 814],
    ["v.010 yr.1688/1693", "uc1.c0000032052", 908],
    ["v.026 yr.1754", "uc1.c0000029595", 1074],
    ["v.027 yr.1757", "uc1.c0000029488", 978],
    ["v.029 yr.1764", "uc1.c0000032193", 1120],
    ["v.036 yr.1776/1778", "uc1.c0000032250", 1066],
    ["v.040 yr.1785", "uc1.c0000032284", 1230],
    ["INDEX: v.056-075 yr.1800-1820", "uc1.c0000035311", 1094],
    ["v.072 yr.1817", "uc1.c0000032607", 944],
    ["v.074 yr.1819", "uc1.c0000032623", 1280],
    ["v.076 yr.1821", "uc1.c0000032649", 1424],
    ["v.082 yr.1827", "uc1.c0000029876", 1062],
    ["v.092 yr.1837", "uc1.e0000056663", 850],
    ["v.093 yr.1837/1838", "uc1.e0000056671", 1066],
    ["v.094 yr.1839", "uc1.e0000056689", 746],
    ["v.096 yr.1841", "uc1.e0000056705", 782],
    ["v.100 1845", "chi.099164736", 1138],
    ["v.100 1845", "mdp.39015056577953", 1138],
    ["v.101 pt.1 1846", "chi.099164744", 806],
    ["v.101 pt.2 yr.1846", "uc1.e0000056762", 784],
    ["v.101 pt.2 1846-47", "chi.099164752", 784],
    ["v.101 1846-1847 pt.1", "mdp.39015056577805", 818],
    ["v.101 1846-1847 pt.2", "mdp.39015056577797", 778],
    ["v.102 1847", "chi.099164760", 1182],
    ["v.102 1847", "mdp.39015056577946", 1200],
    ["v.103 1847-1848", "mdp.39015056577789", 1220],
    ["v.104 1848-1850", "mdp.39015056577938", 740],
    ["v.105 yr.1850", "uc1.e0000056804", 804],
    ["v.106 1851-52", "chi.099164809", 576],
    ["v.106 1851-1852", "mdp.39015056577771", 572],
    ["v.107 1852", "mdp.39015056577763", 476],
    ["v.108-120 1852-65 index", "chi.099164972", 1052],
    ["v.108 1852-54", "chi.099164859", 1004],
    ["v.108 1852-1854", "mdp.39015056577912", 1010],
    ["v.109 1854", "chi.099164867", 626],
    ["v.109 1854", "mdp.39015056577755", 630],
    ["v.110 1854-55", "chi.099164875", 600],
    ["v.110 1854-1855", "mdp.39015056577904", 600],
    ["v.111 1856", "chi.099164883", 508],
    ["v.111 1856", "mdp.39015056577748", 514],
    ["v.112 1857", "chi.099164891", 574],
    ["v.112 1857", "mdp.39015056577896", 574],
    ["v.113 1857-1859", "mdp.39015056577730", 488],
    ["v.114 yr.1859", "uc1.e0000056895", 520],
    ["v.114 1859", "mdp.39015056577888", 524],
    ["v.115 yr.1860", "uc1.e0000056903", 652],
    ["v.115 1860-1861", "mdp.39015056577722", 648],
    ["v.116 1861-1862", "mdp.39015056577870", 558],
    ["v.117 1862-1863", "mdp.39015056577714", 514],
    ["v.118 1863-1864", "mdp.39015056577862", 540],
    ["v.120 1865", "mdp.39015056577706", 592],
    ["v.121-134 1866-1878/79 index", "chi.74591169", 1162],
    ["v.121 1865-1867", "mdp.39015056578142", 684],
    ["v.122 yr.1867", "uc1.e0000056978", 604],
    ["v.122 1867", "mdp.39015056578134", 608],
    ["v.123 yr.1867/1868", "uc1.e0000056986", 498],
    ["v.123 1867-1868", "mdp.39015056578126", 500],
    ["v.124 1868-1869", "mdp.39015056578118", 550],
    ["v.125 1870", "mdp.39015056731386", 546],
    ["v.126 yr.1877", "uc1.e0000057018", 578],
    ["v.126 1871", "mdp.39015056731394", 586],
    ["v.127 yr.1872", "uc1.e0000057026", 570],
    ["v.127 1872", "mdp.39015056733242", 580],
    ["v.128 1873", "mdp.39015056732947", 572],
    ["v.129 1874", "mdp.39015056733093", 514],
    ["v.130 1875", "mdp.39015056732939", 598],
    ["v.131 yr.1876", "uc1.e0000057067", 564],
    ["v.131 1876", "mdp.39015056732921", 568],
    ["v.132 1877", "mdp.39015056732913", 590],
    ["v.133 yr.1878", "uc1.e0000057083", 580],
    ["v.133 1878", "mdp.39015056732905", 588],
    ["v.134 yr.1878/1879", "uc1.e0000057091", 586],
    ["v.134 1878-1879", "mdp.39015056732897", 594],
    ["v.135 yr.1860", "uc1.e0000057109", 610],
    ["v.135 1880", "chi.099165106", 614],
    ["v.135 1880", "mdp.39015056733085", 612],
    ["v.136 1881", "mdp.39015056733077", 676],
    ["v.137 1882", "mdp.39015056733069", 722],
    ["v.138 1883", "mdp.39015056732889", 658],
    ["v.139 1884", "mdp.39015056733051", 634],
    ["v.140 1884-1885", "mdp.39015056732871", 572],
    ["v.140 1885", "chi.099165156", 570],
    ["v.141 1886", "mdp.39015056732863", 562],
    ["v.142 yr.1887", "uc1.e0000057174", 716],
    ["v.142 1887", "mdp.39015056732855", 724],
    ["v.143 yr.1888", "uc1.e0000057182", 706],
    ["v.147 1892", "chi.099165237", 596],
    ["v.147 1892", "mdp.39015056732830", 612],
    ["v.148 1893-1894", "mdp.39015056733234", 898],
    ["v.149 1894", "mdp.39015056733226", 562],
    ["v.150 1895", "mdp.39015056733218", 552],
    ["v.151 1896", "mdp.39015056733200", 46],
    ["v.152 1897", "chi.099165287", 596],
    ["v.153 yr.1898", "uc1.e0000057281", 592],
    ["v.153 1898", "mdp.39015056733184", 596],
    ["v.154 1899", "mdp.39015056733176", 620],
    ["v.155 1900", "mdp.39015056733168", 602],
    ["v.157 1902", "chi.099165342", 706],
    ["v.158 1903", "chi.099165350", 574],
    ["v.159 1904", "chi.099165368", 576],
    ["v.161 yr.1906", "uc1.e0000059923", 686],
    ["v.162 yr.1907", "uc1.e0000059931", 614],
    ["v.163 1908", "chi.099165407", 698],
    ["v.164 1909", "chi.099165415", 710],
    ["v.165 1910", "chi.099165423", 456],
    ["Index v.166-175", "uc1.c109614531", 574],
    ["v.166 1911", "chi.099165449", 696],
    ["v.167 yr.1912/1913", "uc1.e0000059980", 730],
    ["v.168 1913", "chi.099165465", 496],
    ["v.169 1914", "chi.099165473", 632],
    ["v.170 yr.1914/1916", "uc1.e0000060012", 436],
    ["v.170 1915", "chi.099165481", 436],
    ["v.171 1916", "chi.099165499", 332],
    ["v.172 1917", "chi.099165504", 388],
    ["v.172 yr.1917/1918", "uc1.e0000060038", 388],
    ["v.173 1918", "chi.099165512", 320],
    ["v.174 1919", "chi.099165520", 516],
    ["v.175 1920", "chi.099165538", 600],
    ["v.176 1921", "chi.099165554", 488],
    ["v.182 1927", "chi.099165619", 462],
    ["v.183 1928", "chi.099165627", 388],
    ["v.184 1929", "chi.099165635", 340],
    ["v.188 yr.1932/1933", "uc1.e0000060194", 402],
    ["v.189 yr.1933/1934", "uc1.e0000060202", 422],
    ["v.190 yr.1934/1935", "uc1.e0000060210", 416],
    ["v.191 yr.1935/1936", "uc1.e0000060228", 448],
    ["v.192 yr.1936/1937", "uc1.e0000060236", 474],
    ["v.193 yr.1937/1938", "uc1.e0000060244", 484],
    ["v.194 yr.1938/1939", "uc1.e0000060251", 564],
    ["v.195 yr.1939/1940", "uc1.e0000060269", 310],
    ["v.196 yr.1940/1941", "uc1.e0000060277", 248],
    ["v.197 yr.1941/1942", "uc1.e0000060285", 218],
    ["v.198 yr.1942/1943", "uc1.e0000060293", 230],
    ["v.199 yr.1943/1944", "uc1.e0000060301", 262],
    ["1714-1718", "chi.63719499", 826],
]
NAMES_VOLUMES = {
    "brian": [0, 25],
    "brian's son": [50, 100],
    "teijah": [100, 150],
    "ryan": [150, 210],
    "mac mini": [25, 50],
}


def get_remaining_pages(volume_i):
    name = VOLUMES[volume_i][0]
    size = VOLUMES[volume_i][2]
    data_path = f"{ROOT_PATH}/{name}"

    existing_pages = [
        int(file_name[:-4])  # remove extension
        for file_name in os.listdir(data_path)
        if os.path.isfile(os.path.join(data_path, file_name))  # minimal validation
    ]
    remaining_pages = [x for x in range(0, size + 1) if x not in existing_pages]
    return remaining_pages


def download_page(volume_i, page_i):
    name = VOLUMES[volume_i][0]
    id = VOLUMES[volume_i][1]

    url = f"https://babel.hathitrust.org/cgi/imgsrv/download/plaintext?id={id}&attachment=1&tracker=D1&seq={page_i}"
    save_path = f"{ROOT_PATH}/{name}/{page_i}.txt"

    try:
        response = requests.get(url, stream=True)
        response.raise_for_status()  # Raise HTTPError for bad responses (4xx or 5xx)
        with open(save_path, "wb") as file:
            for chunk in response.iter_content(chunk_size=8192):
                file.write(chunk)
        return True
    except requests.exceptions.RequestException as e:
        return False


def download_volume(volume_i):
    name = VOLUMES[volume_i][0]
    size = VOLUMES[volume_i][2]

    # make folder if dne
    data_path = f"{ROOT_PATH}/{name}"
    if not os.path.exists(data_path):
        os.mkdir(data_path)

    initial = size + 1 - len(get_remaining_pages(volume_i))
    with tqdm(total=size + 1, desc=name, initial=initial) as pbar:
        while True:  # run until all pages downloaded
            pages = get_remaining_pages(volume_i)
            pbar.n = size + 1 - len(pages)
            if len(pages) == 0:  # exit
                break

            fails = 0
            for page_i in pages:
                is_success = download_page(volume_i, page_i)
                if is_success:
                    pbar.update(1)
                else:
                    fails += 1
                    if fails > MAX_FAILS:  # reset and wait
                        fails = 0
                        time.sleep(DELAY)


def main():
    name = input("name: ")
    if name not in NAMES_VOLUMES:
        print("auth failed")
        exit(1)

    start = NAMES_VOLUMES[name][0]
    end = NAMES_VOLUMES[name][1]
    for i in range(start, end):
        download_volume(i)


if __name__ == "__main__":
    main()
